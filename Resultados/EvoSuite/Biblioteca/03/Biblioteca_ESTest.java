/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 12 17:37:57 GMT 2024
 */

package imd;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import imd.Biblioteca;
import imd.Livro;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Biblioteca_ESTest extends Biblioteca_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca(",C*o` 8lO^S<ca#I");
      Livro livro0 = new Livro(",C*o` 8lO^S<ca#I", (String) null, 0, 0);
      biblioteca0.adicionarLivro(livro0);
      boolean boolean0 = biblioteca0.verificarDisponibilidade(",C*o` 8lO^S<ca#I");
      assertEquals(1, biblioteca0.getQuantidadeLivros());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca("Yl&&T0M1");
      biblioteca0.popularBiblioteca();
      Livro livro0 = new Livro("bQ[L", (String) null, 3201, 45);
      biblioteca0.adicionarLivro(livro0);
      biblioteca0.removerLivro(livro0);
      assertEquals(3, biblioteca0.getQuantidadeLivros());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca(",C*o` 8lO^S<ca#I");
      Livro livro0 = new Livro(",C*o` 8lO^S<ca#I", (String) null, 0, 0);
      biblioteca0.adicionarLivro(livro0);
      int int0 = biblioteca0.getQuantidadeLivros();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca((String) null);
      biblioteca0.getNome();
      assertEquals(0, biblioteca0.getQuantidadeLivros());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca("");
      biblioteca0.getNome();
      assertEquals(0, biblioteca0.getQuantidadeLivros());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca("SeUSRB");
      Livro livro0 = new Livro("SeUSRB", "SeUSRB", (-232), 3);
      biblioteca0.adicionarLivro(livro0);
      biblioteca0.buscarLivroPorTitulo("SeUSRB");
      assertEquals(1, biblioteca0.getQuantidadeLivros());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca(",C*o` 8lO^S<ca#I");
      Livro livro0 = new Livro(",C*o` 8lO^S<ca#I", (String) null, 0, 0);
      biblioteca0.adicionarLivro(livro0);
      biblioteca0.buscarLivroPorTitulo(",C*o` 8lO^S<ca#I");
      assertEquals(1, biblioteca0.getQuantidadeLivros());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca(",C*o` 8lO^S<ca#I");
      Livro livro0 = new Livro(",C*o` 8lO^S<ca#I", (String) null, 0, 0);
      livro0.adicionarCopias((-3712));
      biblioteca0.adicionarLivro(livro0);
      biblioteca0.buscarLivroPorTitulo(",C*o` 8lO^S<ca#I");
      assertEquals(1, biblioteca0.getQuantidadeLivros());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca("imd.Livro");
      biblioteca0.adicionarLivro((Livro) null);
      // Undeclared exception!
      try { 
        biblioteca0.buscarLivroPorTitulo("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("imd.Biblioteca", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca("Yl&&T0M1");
      Livro livro0 = new Livro("bQ[L", (String) null, 3201, 45);
      biblioteca0.adicionarLivro(livro0);
      biblioteca0.buscarLivroPorTitulo("bQ[L");
      assertEquals(1, biblioteca0.getQuantidadeLivros());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca("Yl&&T0M1");
      biblioteca0.popularBiblioteca();
      biblioteca0.buscarLivroPorTitulo("J\"wCZY>?");
      assertEquals(3, biblioteca0.getQuantidadeLivros());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca("yec[o!791%_G");
      Livro livro0 = new Livro("yec[o!791%_G", "yec[o!791%_G", (-1448), (-1448));
      biblioteca0.adicionarLivro(livro0);
      boolean boolean0 = biblioteca0.verificarDisponibilidade("yec[o!791%_G");
      assertEquals(1, biblioteca0.getQuantidadeLivros());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca("e");
      Livro livro0 = new Livro("mT", "mT", 3201, 3201);
      biblioteca0.adicionarLivro(livro0);
      boolean boolean0 = biblioteca0.verificarDisponibilidade("mT");
      assertEquals(1, biblioteca0.getQuantidadeLivros());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca("e");
      Livro livro0 = new Livro("mS", "mT", 3201, 3201);
      biblioteca0.adicionarLivro(livro0);
      boolean boolean0 = biblioteca0.verificarDisponibilidade("mT");
      assertEquals(1, biblioteca0.getQuantidadeLivros());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca("e");
      Livro livro0 = new Livro("mS", "mT", 3201, 3201);
      biblioteca0.removerLivro(livro0);
      assertEquals(0, biblioteca0.getQuantidadeLivros());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca("yec[o!791%_G");
      biblioteca0.getNome();
      assertEquals(0, biblioteca0.getQuantidadeLivros());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca(",C*o` 8lO^S<ca#I");
      int int0 = biblioteca0.getQuantidadeLivros();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Biblioteca biblioteca0 = new Biblioteca("P/");
      biblioteca0.adicionarLivro((Livro) null);
      // Undeclared exception!
      try { 
        biblioteca0.verificarDisponibilidade("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("imd.Biblioteca", e);
      }
  }
}
